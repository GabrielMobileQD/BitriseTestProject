# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, codepush ]
  pull_request:
    branches: [ master ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
     # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Cache and/or restore node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Cache Gradle local packages
        uses: actions/cache@v2
        with:
          path: android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*android/.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
        #npm cache files are stored in 
      - name: Setup detox-cli
        run: sudo npm install -g detox-cli
      - name: Install npm dependencies
        run: sudo npm install
      # - name: run an Android Emulator and run detox tests.
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #    api-level: 29
      #    profile: Nexus One 
      #    script: |
      #         echo Oi, vou listar os avds disponiveis e apos isso rodar os testes em detox.
      #         avdmanager list avd
      #         detox build --c android.emu.release
      #         detox test -c android.emu.release 
      - name: Deploy to Codepush tEST
        uses: NishanthShankar/codepush-action@master
        with:
          args: release-react -a gabrielmenezes/CI_Test_App -d Staging 
        env:
          APPCENTER_ACCESS_TOKEN: ec665ca1e8017b10b73818717dea3a444f14b33c
#       # Runs a set of commands using the runners shell
#       - name: Greetings for android build
#         run: |
#           echo Lets build a APK for Android.

#       - name: Upload Artifact
#         uses: actions/upload-artifact@v1
#         with:
#           name: app-release.apk
#           path: android/app/build/outputs/apk/release/
